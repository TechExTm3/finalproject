{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy Docker container on ECS with CloudFormation",
    "Parameters": {
      "InstanceType": {
        "Type": "String",
        "Default": "t2.micro",
        "Description": "EC2 instance type",
        "AllowedValues": [
          "t2.micro",
          "t2.small",
          "t2.medium"
        ]
      }
    },
    "Resources": {
      "ECSCluster": {
        "Type": "AWS::ECS::Cluster",
        "Properties": {
          "ClusterName": "my-ecs-cluster"
        }
      },
      "EC2Instance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "ImageId": {
            "Ref": "LatestAmiId"
          },
          "KeyName": "my-key-pair",
          "IamInstanceProfile": {
            "Ref": "EC2InstanceProfile"
          },
          "SecurityGroupIds": [
            {
              "Ref": "InstanceSecurityGroup"
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": "ECS Instance"
            }
          ]
        }
      },
      "ECSInstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Roles": [
            {
              "Ref": "ECSInstanceRole"
            }
          ]
        }
      },
      "ECSInstanceRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
          ]
        }
      },
      "InstanceSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable SSH and HTTP access",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 22,
              "ToPort": 22,
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 80,
              "ToPort": 80,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "TaskDefinition": {
        "Type": "AWS::ECS::TaskDefinition",
        "Properties": {
          "Family": "my-task-definition",
          "NetworkMode": "bridge",
          "ContainerDefinitions": [
            {
              "Name": "my-container",
              "Image": "amazon/amazon-ecs-sample",
              "Memory": 512,
              "PortMappings": [
                {
                  "ContainerPort": 80,
                  "HostPort": 80
                }
              ]
            }
          ]
        }
      },
      "ECSService": {
        "Type": "AWS::ECS::Service",
        "Properties": {
          "Cluster": {
            "Ref": "ECSCluster"
          },
          "DesiredCount": 1,
          "TaskDefinition": {
            "Ref": "TaskDefinition"
          },
          "LaunchType": "EC2",
          "ServiceName": "my-ecs-service"
        }
      }
    },
    "Outputs": {
      "ECSClusterName": {
        "Description": "The name of the ECS cluster",
        "Value": {
          "Ref": "ECSCluster"
        }
      },
      "EC2InstanceId": {
        "Description": "The ID of the EC2 instance",
        "Value": {
          "Ref": "EC2Instance"
        }
      }
    }
  }
  